// ShellGoodies.cpp : Implementation of DLL Exports (generated by ATL AppWizard).

// Note: Proxy/Stub Information
//	  To merge the proxy/stub code into the object DLL, add the file
//	  dlldatax.c to the project.  Make sure precompiled headers
//	  are turned off for this file, and add _MERGE_PROXYSTUB to the
//	  defines for the project.
//
//	  If you are not running WinNT4.0 or Win95 with DCOM, then you
//	  need to remove the following define from dlldatax.c
//	  #define _WIN32_WINNT 0x0400
//
//	  Further, if you are running MIDL without /Oicf switch, you also
//	  need to remove the following define from dlldatax.c.
//	  #define USE_STUBLESS_PROXY
//
//	  Modify the custom build rule for ShellGoodies.idl by adding the following
//	  files to the Outputs.
//		  ShellGoodies_p.c
//		  dlldata.c
//	  To build a separate proxy/stub DLL,
//	  run nmake -f ShellGoodiesps.mk in the project directory.

#include "pch.h"
#include "Application.h"

#include "gen/ShellGoodies_i.h"
#include "gen/ShellGoodies_i.c"
#include "ShellGoodiesCom.h"


BEGIN_OBJECT_MAP( s_objectMap )
	OBJECT_ENTRY( CLSID_ShellGoodiesCom, CShellGoodiesCom )
END_OBJECT_MAP()


namespace app
{
	HRESULT InitModule( HINSTANCE hInstance )
	{
		return g_comModule.Init( s_objectMap, hInstance, &LIBID_ShellGoodiesLib );
	}
}


/////////////////////////////////////////////////////////////////////////////
// Used to determine whether the DLL can be unloaded by OLE

STDAPI DllCanUnloadNow( void )
{
	AFX_MANAGE_STATE( AfxGetStaticModuleState() );
	return ( S_OK == AfxDllCanUnloadNow() && 0 == g_comModule.GetLockCount() ) ? S_OK : S_FALSE;
}


/////////////////////////////////////////////////////////////////////////////
// Returns a class factory to create an object of the requested type

STDAPI DllGetClassObject( REFCLSID rclsid, REFIID riid, LPVOID* ppv )
{
	return g_comModule.GetClassObject(rclsid, riid, ppv);
}

/////////////////////////////////////////////////////////////////////////////
// DllRegisterServer - Adds entries to the system registry

STDAPI DllRegisterServer( void )
{
	// OBSOLETE: the type library is not necessary for a shell extension DLL
	//return HR_AUDIT( g_comModule.RegisterServer( TRUE ) );	// registers object, typelib and all interfaces in typelib

	return HR_AUDIT( g_comModule.RegisterServer( FALSE ) );		// registers object, NO TYPELIB (read ProjectNotes.txt)
}

/////////////////////////////////////////////////////////////////////////////
// DllUnregisterServer - Removes entries from the system registry

STDAPI DllUnregisterServer( void )
{
	// OBSOLETE: the type library is not necessary for a shell extension DLL
	//return HR_AUDIT( g_comModule.UnregisterServer( TRUE ) );

	return HR_AUDIT( g_comModule.UnregisterServer( FALSE ) );	// NO TYPELIB (read ProjectNotes.txt)

}
